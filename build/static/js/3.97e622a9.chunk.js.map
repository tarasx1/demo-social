{"version":3,"sources":["Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","like","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postsElements","posts","reverse","map","p","postBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","photos","large","Preloader","Profile","ProfileContainer","userId","this","match","params","autorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.97e622a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3Zp5l\",\"posts\":\"MyPosts_posts__2ObRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3BjZL\",\"like\":\"Post_like__10xjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3izEx\"};","import React from 'react';\r\nimport s from  './Post.module.css';\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRqRyIiwYCq4s-fZi1zdmyfSuIPUvg9EyZ_Q&usqp=CAU\" />\r\n          {props.message}\r\n            <div className={s.like}>\r\n            <span>Like</span> { props.likesCount}\r\n            <img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcReuu5q5sBB6BY4H6ZZLMBHKJ7zPR8h0efolYAq9Irh-0ww1Os1eMGoxVrMkfpYkwe7Kxk&usqp=CAU' />\r\n\r\n            </div>\r\n        </div>\r\n       \r\n    )\r\n};\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nlet maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log('RENDER');\r\n\r\n  let postsElements = [...props.posts]\r\n    .reverse()\r\n    .map((p) => <Post message={p.message} likesCount={p.likesCount} />);\r\n  let newPostElement = React.createRef();\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postBlock}>\r\n      <h3>My post</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name=\"newPostText\"\r\n          placeholder={'Post message'}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add posts</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//   //let state = props.store.getState();\r\n//   return (\r\n//     <StoreContext.Consumer>{\r\n//       (store) => {\r\n//         let state = store.getState();\r\n//         let addPost = () => {\r\n//           store.dispatch(addPostActionCreator())\r\n//         }\r\n\r\n//         let onPostChange = (text) => {\r\n//           let action = updateNewPostTextActionCreator(text);\r\n//           store.dispatch(action);\r\n//         }\r\n//         return <MyPosts\r\n//           updateNewPostText={onPostChange}\r\n//           addPost={addPost}\r\n//           posts={state.profilePage.posts}\r\n//           newPostText={state.profilePage.newPostText}\r\n//         />\r\n//       }\r\n//     }\r\n//     </StoreContext.Consumer>\r\n//   )\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || 'You abuser, no status'}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            onChange={onStatusChange}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport {\r\n  getUserProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from '../../redux/profile-reducer';\r\nimport Profile from './Profile';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.autorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push('/login');\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  autorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}