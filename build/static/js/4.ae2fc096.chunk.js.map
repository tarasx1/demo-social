{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/AddMessageForm.jsx/AddMessageForm.jsx","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","Components/Hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","maxLength50","maxLengthCreator","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","validate","required","name","placeholder","DialogItem","className","s","dialog","active","src","to","id","Message","message","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,4GCO/MC,EAAcC,YAAiB,IAoBpBC,cAAU,CAAEC,KAAM,2BAAlBD,EAlBQ,SAACE,GACtB,OACE,uBAAMC,SAAUD,EAAME,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBY,KAAK,iBACLC,YAAY,yBAGhB,8BACE,kD,0BCTOC,EATI,SAACV,GAChB,OACI,sBAAKW,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,UACI,qBAAKC,IAAI,wHACT,cAAC,IAAD,CAASC,GAAI,YAAchB,EAAMiB,GAAjC,SAAsCjB,EAAMQ,WCCzCU,EANC,SAAClB,GACb,OACI,qBAAKW,UAAWC,IAAEO,QAAlB,SAA4BnB,EAAMmB,WCgC3BC,EA1BC,SAACpB,GACf,IAAIqB,EAAQrB,EAAMsB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,cAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAiBS,GAAIS,EAAET,IAAZS,EAAET,OAE/BU,EAAmBN,EAAMO,SAASH,KAAI,SAACI,GAAD,OACxC,cAAC,EAAD,CAASV,QAASU,EAAEV,SAAcU,EAAEZ,OAEjBI,EAAMS,eAM3B,OACE,sBAAKnB,UAAWC,IAAEY,QAAlB,UACE,qBAAKb,UAAWC,IAAEmB,aAAlB,SAAiCR,IACjC,qBAAKZ,UAAWC,IAAEgB,SAAlB,SACE,8BAAMD,MAER,cAAC,EAAD,CAAgB1B,SAVA,SAAC+B,GACnBhC,EAAMiC,YAAYD,EAAOF,uB,uDCnBzBI,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,S,OCeRE,sBACbC,aAfoB,SAACjB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACiB,GACxB,MAAO,CACLN,YAAa,SAACH,GACZS,EAASC,YAAmBV,UDPF,SAACW,GAAe,IAEtCC,EAFqC,4JAIvC,WACI,OAAIC,KAAK3C,MAAMmC,OACR,cAACM,EAAD,eAAeE,KAAK3C,QADG,cAAC,IAAD,CAAUgB,GAAI,eALT,GAEX4B,IAAMH,WAUtC,OAHsCH,YAAQJ,EAARI,CACpCI,KCESL,CAGbjB","file":"static/js/4.ae2fc096.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3aTRy\",\"dialogsItems\":\"Dialogs_dialogsItems__3Qjyx\",\"dialog\":\"Dialogs_dialog__2zFRk\",\"active\":\"Dialogs_active__NGUBf\",\"messages\":\"Dialogs_messages__UcOIF\",\"message\":\"Dialogs_message__2hBmF\"};","import { Field, reduxForm } from 'redux-form';\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from '../../../utils/validators/validators';\r\nimport React from 'react';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nlet maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: 'dialog-add-message-form' })(AddMessageForm);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog + \" \" + s.active}>\r\n            <img src=\"https://avatars.mds.yandex.net/get-zen_doc/3644482/pub_5f6f09ba63b25d04cd57922e_5f6f0d8ffde6297ce3a096df/scale_1200\" />\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport AddMessageForm from './AddMessageForm.jsx/AddMessageForm';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n\r\n  let dialogsElements = state.dialogs.map((d) => (\r\n    <DialogItem name={d.name} key={d.id} id={d.id} />\r\n  ));\r\n  let messagesElements = state.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n  let newMessageBody = state.newMessageBody;\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>\r\n        <div>{messagesElements}</div>\r\n      </div>\r\n      <AddMessageForm onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n  })\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n     let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) \r\n     (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../Hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}